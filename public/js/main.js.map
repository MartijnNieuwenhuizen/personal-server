{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@babel/runtime/helpers/interopRequireDefault.js","src/components/index.js","src/static/js/main.js","src/static/js/utils/initializeComponents.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","obj","__esModule","default","index","_default","_initializeComponents","document","readyState","Promise","resolve","addEventListener","then","initializeComponents","_components","_interopRequireDefault","context","Array","from","querySelectorAll","forEach","element","options","JSON","parse","stringify","dataset","split","path","setAttribute"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,GCMAI,EAAAJ,QANA,SAAAK,GACA,OAAAA,GAAAA,EAAAC,WAAAD,EAAA,CACAE,QAAAF,iHCAe,CAAAG,MAAQd,EAAA,eAErBM,EAAAO,QAAUE,qDCHZ,IAAAC,EAAAhB,EAAA,+BAI4B,gBAAxBiB,SAASC,YACe,aAAxBD,SAASC,WAEFC,QAAQC,UAGV,IAAID,QAAQ,SAAAC,GAAO,OACxBH,SAASI,iBAAiB,mBAAoBD,MAI1CE,KAAK,WAAA,OAAM,EAAAN,EAAAO,sBAAqBN,sNCbxC,IAAAO,EAAAC,EAAAzB,EAAA,+CAMoC,SAAA0B,GACjBC,MAAMC,KACrBF,EAAQG,iBAAiB,0CAGlBC,QAAQ,SAAAC,GAEf,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,UAAUJ,EAAQK,UAKlDL,EAAQK,QAAQ1B,OAAO2B,MAAM,KAAKP,QAAQ,SAAAQ,GACxC,IAAM5B,EAAS4B,KAAQd,EAAAX,QAAaW,EAAAX,QAAWyB,GAAQtC,EAAQsC,GAE/D,IADkB5B,EAAOG,QAAUH,EAAOG,QAAUH,GACtCqB,EAASC,KAGzBD,EAAQQ,aAAa,mBAAoB","file":"main.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","/* eslint-disable global-require */\n\nexport default require('./**/!(*.Spec).js', {\n  mode: 'hash',\n  resolve: ['reduce', 'strip-ext']\n})\n","// Reference our components so they get included\nimport { initializeComponents } from 'utils/initializeComponents'\n\nconst ready = () => {\n  if (\n    document.readyState === 'interactive' ||\n    document.readyState === 'complete'\n  ) {\n    return Promise.resolve()\n  }\n\n  return new Promise(resolve =>\n    document.addEventListener('DOMContentLoaded', resolve)\n  )\n}\n\nready().then(() => initializeComponents(document))\n\n// // If you want to use conditioner instead:\n//\n// // 1.  Remove the 'manual init' block\n// // 2.  Uncomment the lines below\n// // 3.  Run $ npm install conditioner-js --save\n//\n// import conditioner from 'conditioner-js';\n//\n// // When you want to use monitors, import them here\n// import 'conditioner-js/dist/min/monitors/media';\n//\n// // Setup conditioner loader to load modules from bundle\n// conditioner.setOptions({\n//     loader: {\n//         require: (path, callback) => {\n//             const module = path in components ? components[path] : require(path);\n//             return callback(module.default ? module.default : module);\n//         },\n//         toUrl: path => path\n//     },\n//     paths: {\n//         monitors: 'conditioner-js/dist/min/monitors/'\n//     }\n// });\n//\n// // Initialize Conditioner\n// ready().then(conditioner.init);\n","/* eslint-disable global-require, no-new */\n\n// Reference our components so they get included\nimport components from '../../../components'\n\n// All other imports\n// import Example from 'ui/Example';\n\n// Attach components to elements\nexport const initializeComponents = context => {\n  const elements = Array.from(\n    context.querySelectorAll('[data-module]:not([data-initialized])')\n  )\n\n  elements.forEach(element => {\n    // Convert dataset to object in a crossbrowser fashion\n    const options = JSON.parse(JSON.stringify(element.dataset))\n\n    // Using the dataset as option means you pass your options as data-setting=\"value\" instead of\n    // data-options='{\"setting\":\"value\"}'\n\n    element.dataset.module.split(',').forEach(path => {\n      const module = path in components ? components[path] : require(path)\n      const Component = module.default ? module.default : module\n      new Component(element, options)\n    })\n\n    element.setAttribute('data-initialized', 'true')\n  })\n}\n"]}